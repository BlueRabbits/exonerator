<project default="run" name="exonerator" basedir=".">

  <!-- Define build paths. -->
  <property name="sources" value="src/main/java"/>
  <property name="resources" value="src/main/resources"/>
  <property name="webapp" value="src/main/webapp"/>
  <property name="generated" value="generated/"/>
  <property name="classes" value="${generated}/classes"/>
  <property name="testclasses" value="${generated}/testclasses/"/>
  <property name="dist" value="${generated}/dist"/>
  <property name="testresources" value="src/test/resources/"/>
  <property name="testsources" value="src/test/java"/>
  <property name="testresult" value="${generated}/test-results"/>
  <property name="libs" value="lib"/>
  <property name="webxmlfile" value="src/main/webapp/web.xml"/>
  <property name="warfile" value="${dist}/exonerator.war"/>
  <property name="source-and-target-java-version" value="1.8" />
  <property name="metricslibversion" value="2.0.0" />
  <patternset id="runtime" >
    <include name="metrics-lib-${metricslibversion}.jar"/>
    <include name="commons-compress-1.13.jar"/>
    <include name="commons-codec-1.10.jar"/>
    <include name="commons-lang3-3.5.jar"/>
    <include name="gson-2.4.jar" />
    <include name="postgresql-9.4.1212.jar"/>
    <include name="servlet-api-3.0.jar"/>
    <include name="logback-core-1.1.9.jar" />
    <include name="logback-classic-1.1.9.jar" />
    <include name="slf4j-api-1.7.22.jar"/>
    <include name="xz-1.6.jar"/>
  </patternset>
  <path id="classpath">
    <pathelement path="${classes}"/>
    <fileset dir="${libs}">
      <patternset refid="runtime" />
    </fileset>
  </path>
  <path id="test.classpath">
    <pathelement path="${classes}"/>
    <pathelement path="${resources}"/>
    <pathelement path="${testclasses}"/>
    <pathelement path="${testresources}"/>
    <fileset dir="${libs}">
      <patternset refid="runtime" />
    </fileset>
    <fileset dir="${libs}">
      <include name="junit4-4.12.jar"/>
      <include name="hamcrest-all-1.3.jar"/>
    </fileset>
  </path>
  <path id="checkstyle.classpath" >
    <fileset dir="${libs}">
      <include name="checkstyle-6.17-all.jar" />
    </fileset>
  </path>

  <target name="clean">
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${generated}" defaultexcludes="false" includes="**" />
    </delete>
  </target>

  <target name="init">
    <copy file="${resources}/config" tofile="${basedir}/config"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${testclasses}"/>
    <mkdir dir="${dist}"/>
  </target>

  <!-- Compile all servlets and plain Java classes. -->
  <target name="compile" depends="init">
    <javac destdir="${classes}"
           srcdir="${sources}"
           source="${source-and-target-java-version}"
           target="${source-and-target-java-version}"
           debug="true"
           deprecation="true"
           optimize="false"
           failonerror="true"
           includeantruntime="false">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="testcompile" depends="init">
    <javac destdir="${testclasses}"
           srcdir="${testsources}"
           source="${source-and-target-java-version}"
           target="${source-and-target-java-version}"
           debug="true"
           deprecation="true"
           optimize="false"
           failonerror="true"
           includeantruntime="false">
      <classpath refid="test.classpath"/>
    </javac>
  </target>

  <target name="test" depends="compile,testcompile">
    <junit fork="true"
           haltonfailure="true"
           printsummary="on">
      <classpath refid="test.classpath"/>
      <formatter type="plain" usefile="false"/>
      <batchtest>
        <fileset dir="${testclasses}"
                 includes="**/*Test.class"/>
      </batchtest>
    </junit>
  </target>

  <!-- Import descriptors into the ExoneraTor database. -->
  <target name="run" depends="compile">
    <java fork="true"
          maxmemory="2048m"
          classname="org.torproject.exonerator.ExoneraTorDatabaseImporter">
      <classpath refid="classpath"/>
    </java>
  </target>

  <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties">
    <classpath refid="checkstyle.classpath" />
  </taskdef>
  <target name="checks" depends="compile">
    <checkstyle config="${testresources}/metrics_checks.xml">
      <fileset dir="${sources}"
               includes="**/*.java" />
      <fileset dir="${testsources}"
               includes="**/*.java" />
      <classpath>
        <path refid="classpath" />
        <path refid="checkstyle.classpath" />
      </classpath>
      <formatter type="plain"
                 toFile="${generated}/checkstyle_report.txt"/>
    </checkstyle>
    <exec executable="cat" outputproperty="checkstyle.result">
      <arg value="${generated}/checkstyle_report.txt" />
    </exec>
    <fail message="Checkstyle complaints: ${checkstyle.result}" >
      <condition>
        <not>
          <length string="${checkstyle.result}"
                  length="29" />
        </not>
      </condition>
    </fail>
  </target>

  <!-- Create a .war file for deployment. -->
  <target name="war"
          depends="compile">
    <war destfile="${warfile}"
         webxml="${webxmlfile}">
      <fileset dir="${webapp}" includes="css/* images/* WEB-INF/*"/>
      <lib dir="${libs}">
        <include name="commons-codec-1.10.jar"/>
        <include name="commons-lang3-3.5.jar"/>
        <include name="gson-2.4.jar" />
        <include name="postgresql-9.4.1212.jar"/>
        <include name="slf4j-api-1.7.22.jar"/>
      </lib>
      <classes dir="${classes}"/>
      <zipfileset dir="${resources}"
                  prefix="WEB-INF/classes"
                  excludes="config **/db/* db" />
      <metainf dir="${webapp}"
               includes="context.xml"/>
    </war>
  </target>
</project>

